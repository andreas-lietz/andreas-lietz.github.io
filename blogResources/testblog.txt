\newcommand{\BB}{\mathbb B}
\newcommand{\CC}{\mathbb C}
\newcommand{\PP}{\mathbb P}
\newcommand{\res}{\upharpoonright}
\newcommand{\ZFC}{\mathrm{ZFC}}
\newcommand{\forces}{\Vdash}

\begin{tldr}
Complete Boolean algebras can be an extremely useful tool for forcing. However, the notion of a cBa is backwards in the theory of forcing. Here, I isolated 
            properties that the forcings associated with cBa's have in a way which can be motivated through a forcing perspective. One should use these "complete Boolean orders" instead of complete Boolean algebras. 
\end{tldr}


There are two different ways to approach learning (or teaching for that matter) forcing. Both come with their own strengths and weaknesses. 

First, there is the "hands-on" approach:The slogan here is to "jump directly into action". Work with a general partial order, define dense sets, generic filters, names and 
construct the forcing extension as the evaluation of all names in the ground model by the generic filter. This is certainly the shortest path towards the forcing theorem
and applications of forcing, say the consistency of $\neg\mathrm{CH}$ with $\ZFC$.

The other possibility is to take the road through the Boolean forest. Define complete Boolean algebras, Boolean valued models, construct the Boolean valued model associated to a 
forcing and mod out by a generic filter. This introduces some significant overhead and additional abstraction. However one benefits from a significantly smoother theory. Just as a basic example, in the definition of the internal forcing relation, the 
statement 
$$\{q\leq p\mid \exists \dot x\in V^{\PP}\ q\forces \varphi(\dot x)\}\text{ is dense below }p$$
is less readable to me than 
$$p\leq \sup_{\dot x\in V^{\mathbb B}}\Vert \varphi(\dot x)\Vert.$$
But much more importantly, one can proof theorems about the theory of forcings which are simply not true for mere partial orders.

\begin{thm} 
    Suppose $\BB$, $\CC$ are cBa's, $G\subseteq\BB$ and $H\subseteq \CC$ are generic over $V$ and $V[G]=V[H]$.
    Then there are $b\in\mathbb B$ and $c\in\mathbb C$ with $\BB\res b\cong \CC\res c$.
\end{thm}

Though the biggest problem using this apporach is that <b> nobody knows what a complete Boolean algebra is</b>! Obviously, this is not exactly true, but chances are that if you ask 
a random mathematician what a Boolean algebra is, they will at least have to ponder for a short bit before coming up with the three operations and the 8 laws that they have to obey.

Even worse, some of these laws do not have an immediate motivation coming from forcing. Even worse<i>er</i>, Boolean algebras are technically trivial forcings as they have a minimal
element $0_{\mathbb B}$, so one has to carry around a little $\times$ in the pocket and write $\BB^\times$ instead. 

Indeed, one must infer the order on a Boolean algebra from the other operations first before forcing. This is totally backwards! We only really care about the order!
On the other hand, the order carries the full information about the Boolean algebra: We can define 
$$b\wedge c = \inf \{b, c\},\ b\vee c = \sup \{b, c\} \text{ and } \neg b =\sup\{c\in\BB\mid c\perp b\}.$$
This suggests strongly that it is possible to characterize the partial orders which are induced by complete Boolean algebras. I would be surprised if this has not been done before,
but I could not find anything in the literature, please let me know of a source if you know about one!

In any case, let us start with separativity. A partial order is seperative if whenever $p\not\leq q$ then there is some $r\leq p$ with $r\perp q$. This property is easily motivated
from a forcing perspective, as any partial order is forcing equivalent to the corresponding separative quotient. Passing to this quotient gets rid of "unnecessary fluff" that does not
carry any relevant information.

It is well-known that any Boolean algebra is seperative, so this should be part of our characterization. Clearly that does not suffice though!

\begin{defn}
Suppose $\PP$ is a partial order and $X\subseteq \PP$ so that $\sup X$ exists. Then the supremum $\sup X$ is tight if $X$ is predense below $\sup X$. We say that $\PP$ admits
tight suprema if any non-empty $X\subseteq\PP$ has a supremum in $\PP$ and these suprema are all tight.
\end{defn}

If a supremum is tight then basically "no information of $X$ about $\dot G$ is lost when passing to $\sup X$". Here is an instructive example of a non-tight supremum: Consider the forcing 
$$\PP=\{p\colon n\rightarrow \omega\mid n<\omega\}$$
ordered by extension. This is of course one representation of Cohen forcing. For $i=7, 42$, let $p_i$ be the condition with domain $\{0\}$ which sends $0$ to $i$ and let $X=\{p_7, p_{42}\}$.
Now $X$ has some information about the generic Cohen real $\dot c$, namely "$\dot c(0)$ is either $7$ or $42$". Notice that $X$ has a supremum in $\PP$, namely $\sup X=\emptyset$. But now all 
information of $X$ has been lost in translation, this is terrible!

From a forcing perspective, suprema are only interesting if they are tight. The supremum of some $X\subseteq\PP$ should be $1_{\PP}$ only if $X$ is predense (or in other words,
if the downwards closure of $X$ is dense). 

Complete Boolean algebras admit tight suprema: Suppose $X\subseteq\BB$ is non-empty, $X$ has a supremum $b$ in $\BB$ because $\BB$ is complete.
If $b$ was not a tight supremum of $X$ then there is some $c\leq b$ incompatible with all $x\in X$. But then $b\wedge\neg c$ would be an upper bound of $X$ strictly below $b$, contradiction!
 So let us add this property to our list of interesting properties of partial orders induced by cBa's.

\begin{defn}
A <b>complete Boolean order</b> is a partial order which is seperative and admits tight suprema.
\end{defn}

It turns out that this is already it! 

\begin{lemm}
The following are equivalent for any partial order $\PP$:
<p>$(1)$ There is a complete Boolean algebra $\BB$ with $\PP=\BB^\times$</p>
<p>$(2)$ $\PP$ is a complete Boolean order.</p>
\end{lemm}

Only these two properties are necessary to complete characterize cBa's and both of them are naturally motivated via forcing!


WIP, to be continued!